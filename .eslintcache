[{"D:\\react js\\todo\\src\\index.js":"1","D:\\react js\\todo\\src\\reportWebVitals.js":"2","D:\\react js\\todo\\src\\App.js":"3","D:\\react js\\todo\\src\\component\\TodoForm.jsx":"4","D:\\react js\\todo\\src\\component\\Todoform.jsx":"5","D:\\react js\\todo\\src\\component\\TodoList.jsx":"6","D:\\react js\\todo\\src\\component\\TodoListItem.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1452,"mtime":1611825199896,"results":"11","hashOfConfig":"9"},{"size":732,"mtime":1611138485763,"results":"12","hashOfConfig":"13"},{"size":733,"mtime":1611824045947,"results":"14","hashOfConfig":"9"},{"size":582,"mtime":1611820792297,"results":"15","hashOfConfig":"9"},{"size":2042,"mtime":1611825178023,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1oz5t8u",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rd6o7w",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"D:\\react js\\todo\\src\\index.js",[],["34","35"],"D:\\react js\\todo\\src\\reportWebVitals.js",[],"D:\\react js\\todo\\src\\App.js",[],"D:\\react js\\todo\\src\\component\\TodoForm.jsx",["36","37"],"D:\\react js\\todo\\src\\component\\Todoform.jsx",[],"D:\\react js\\todo\\src\\component\\TodoList.jsx",["38"],"import React, { useState } from 'react'\r\nimport TodoListItem from './TodoListItem'\r\n\r\n\r\nfunction TodoList({todos,removeTodo,checkCompleted,handleEditnews}) {\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {todos.map((todo,index) => (\r\n                <TodoListItem\r\n                key={index}\r\n                id={index}\r\n                todo={todo}\r\n                removeTodo={removeTodo}\r\n                checkCompleted={checkCompleted}\r\n                handleEditnews={handleEditnews}\r\n                />\r\n          ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","D:\\react js\\todo\\src\\component\\TodoListItem.jsx",["39","40","41","42"],"import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nTodoListItem.propTypes = {\r\n    todo: PropTypes.array.isRequired,\r\n}\r\n\r\nfunction TodoListItem({todo,id,removeTodo,checkCompleted,handleEditnews}) {\r\n    const[isShow,setShow]=useState(false);\r\n    const[onEdit, setonEdit]=useState(false);\r\n    const[edit,setEdit]=useState(todo.text);\r\n    //change color\r\n    const onhandlechange =()=>{\r\n            checkCompleted(id);\r\n            setShow(!isShow)\r\n    }\r\n    //show form edit\r\n    const handdleonEdit = ()=>{\r\n        setonEdit(true);\r\n    }\r\n    // save btn\r\n    const handleonSave = id=>{\r\n       setonEdit(false);\r\n       if(edit){\r\n           handleEditnews(edit,id);\r\n       }else{\r\n           setEdit(todo.text);\r\n       }\r\n    }\r\n   if(onEdit){\r\n     return(\r\n         // form edit\r\n         <div className=\"display list\">\r\n             <input type=\"text\" name=\"\" id=\"\" className=\" form2\" value={edit} onChange={e=>setEdit(e.target\r\n                .value)}/> \r\n             <img src=\"https://img.icons8.com/metro/48/26e07f/save.png\" className=\"save\" onClick={()=>{handleonSave(id)}}/>\r\n\r\n         </div>\r\n     )\r\n   }\r\n   else{\r\n    return (\r\n        // items of every todo\r\n        <div className=\"display list\">\r\n            <div className='text'>\r\n            <p style={{color: todo.isCompleted?'blue':'black'}}\r\n            onClick={onhandlechange} id={id} checked={todo.isCompleted}\r\n            >{todo.text}</p>\r\n            </div>\r\n\r\n            <div className=\"btn-list display\">\r\n           <p> {isShow && <img src=\"https://img.icons8.com/emoji/48/000000/check-mark-emoji.png\" onClick={onhandlechange} className=\"margincheck\"/>}</p> \r\n           <img src=\"https://img.icons8.com/small/16/26e07f/edit.png\" className=\"edit\" onClick={handdleonEdit}/>\r\n           <img src=\"https://img.icons8.com/small/16/000000/delete-sign.png\" className=\"delete\" onClick={()=>removeTodo(id)}/>\r\n            </div>            \r\n        </div>\r\n    )\r\n   }\r\n\r\n    \r\n}\r\n\r\nexport default TodoListItem\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":11,"nodeType":"49","messageId":"50","endLine":4,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":4,"column":18,"nodeType":"49","messageId":"50","endLine":4,"endColumn":26},{"ruleId":"47","severity":1,"message":"52","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":37,"column":14,"nodeType":"55","endLine":37,"endColumn":124},{"ruleId":"53","severity":1,"message":"54","line":53,"column":27,"nodeType":"55","endLine":53,"endColumn":148},{"ruleId":"53","severity":1,"message":"54","line":54,"column":12,"nodeType":"55","endLine":54,"endColumn":113},{"ruleId":"53","severity":1,"message":"54","line":55,"column":12,"nodeType":"55","endLine":55,"endColumn":127},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","'setValue' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]